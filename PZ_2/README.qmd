---
title: "Практическое задание №2"
author: "Журавлева Юлия БИСО-01-20"
format:   
  md:
    output-file: README.md
---

# Использование технологии Yandex DataLens для анализа данных сетевой активности

## Цель работы

1. Изучить возможности технологии Yandex DataLens для визуального анализа структурированных наборов данных
2. Получить навыки визуализации данных для последующего анализа с помощью сервисов Yandex Cloud
3. Получить навыки создания решений мониторинга/SIEM на базе облачных и открытых программных решений
4. Закрепить практические навыки использования SQL для анализа данных сетевой активности в сегментированной корпоративной сети

## Исходные данные

1. Ноутбук с ОС Windows 10
2. RStudio
3. Yandex Cloud
4. Yandex DataLens

## Задание

Используя сервис Yandex DataLens настроить доступ к результатам Yandex Query, полученным в ходе выполнения практической работы №1, и визуально представить результаты анализа данных.

### Поставленные задачи

1. Представить в виде круговой диаграммы соотношение внешнего и внутреннего сетевого трафика.
2. Представить в виде столбчатой диаграммы соотношение входящего и исходящего трафика из внутреннего сетвого сегмента.
3. Построить график активности (линейная диаграмма) объема трафика во времени.
4. Все построенные графики вывести в виде единого дашборда в Yandex DataLens.

## Ход работы

### 1. Настроить подключение к Yandex Query из DataLens

- Первым делом перейдём в сервис Yandex DataLens (https://datalens.yandex.ru/) и перейдём по пути «Подключения» => «Создать подключение» => «Yandex Query». Заполним все необходимые поля, предварительно проверив, что ранее соединения не было. 

![](screen/1.png)

- Используем уже существующий сервисный аккаунт `students-datalens-query`.

![](screen/2.png)

- Задаём название нашего подключения и заметим, что оно появилось в нашем списке.

![](screen/3.png)
![](screen/4.png)

### 2. Создать из запроса YandexQuery датасет DataLens

- Первым делом перейдём во вкладку «Датасеты» => «Создать датасет». Выбираем наше подключение и среди доступных таблиц перетаскиваем в рабочую область наш доступный запрос как выбранный датасет. 

Внизу можем заметить, что нам стал доступен предпросмотр датасета с возможностью выбора количества отображаемых строк.

![](screen/5.png)

- Задаём название нашего датасета и заметим, что оно появилось в нашем списке.

![](screen/6.png)

### 3. Делаем нужные графики и диаграммы

- В DataLens графики и диаграммы называются чартами. Перейдём во вкладку «Чарты» => «Создать чарт» => «Чарт». Далее выбираем данные, тип диаграммы и исходные данные.

![](screen/7.png)

- Создадим первую круговую диаграмму соотношения внешнего и внутреннего сетевого трафика. Помним, что IP адреса внутренней сети начинаются с 12-14 октетов.

![](screen/8.png)

**Созданные поля:**

- Измерение `diff` для разделения внутреннего и внешнего трафика

```{}
IF (([src] LIKE '12.%' OR [src] LIKE '13.%' OR [src] LIKE '14.%') 
    AND 
    ([dst] LIKE '12.%' OR [dst] LIKE '13.%' OR [dst] LIKE '14.%'))
  THEN 
    'Внутренний трафик'
ELSE
  'Внешний трафик'
END
```

- Измерение `colour` для разметки легенды и цвета

```{}
IF (([src] LIKE '12.%' OR [src] LIKE '13.%' OR [src] LIKE '14.%') 
    AND 
    ([dst] LIKE '12.%' OR [dst] LIKE '13.%' OR [dst] LIKE '14.%'))
  THEN 
    'Красный цвет'
ELSE
  'Голубой цвет'
END
```

- Показатель `bytes_2` для сокращения количества байт до Гбайт

```{}
[bytes] / (1024 * 1024 * 1024)
```

- Показатель `gb` для вывода данных и пометкой гигабайт (Гб)

```{}
CONCAT([bytes_2], " Гб")
```

- Создадим вторую столбчатую диаграмму соотношения входящего и исходящего трафика из внутреннего сетевого сегмента организации. Помним, что IP адреса внутренней сети начинаются с 12-14 октетов.

![](screen/9.png)

**Созданные поля:**

- Измерение `bytes2` для разделения входящего и исходящего трафика.  

```{}
IF (LEFT([src], 3) IN ('12.', '13.', '14.') 
    AND 
    LEFT([dst], 3) NOT IN ('12.', '13.', '14.'))
    THEN 'Исходящий трафик'

ELSEIF (LEFT([dst], 3) IN ('12.', '13.', '14.') 
    AND 
    LEFT([src], 3) NOT IN ('12.', '13.', '14.'))
    THEN 'Входящий трафик'
END
```

- Измерение `colour2` для разметки цвета

```{}
IF (LEFT([src], 3) IN ('12.', '13.', '14.') 
    AND 
    LEFT([dst], 3) NOT IN ('12.', '13.', '14.'))
    THEN 'Красный цвет: Исходящий трафик'

ELSEIF (LEFT([dst], 3) IN ('12.', '13.', '14.') 
    AND 
    LEFT([src], 3) NOT IN ('12.', '13.', '14.'))
    THEN 'Голубой цвет: Входящий трафик'
END
```

- Показатель `byt_gb2` для сокращения количества байт до Гбайт

```{}
[bytes] / (1024 * 1024 * 1024)
```

- Показатель `gb2` для вывода данных и пометкой гигабайт (Гб)

```{}
CONCAT([byt_gb2], " Гб")
```

- Создадим третью линейную диаграмму графика активности объема трафика во времени входящего и исходящего трафика из внутреннего сетевого сегмента организации. Помним, что IP адреса внутренней сети начинаются с 12-14 октетов.

![](screen/10.png)

**Созданные поля:**

- Измерение `time_sec` для подсчёта трафика по секундам

```{}
SECOND([timestamp])
```

- Измерение `bytes3` для разметки цвета

```{}
IF (LEFT([src], 3) IN ('12.', '13.', '14.') 
    AND 
    LEFT([dst], 3) NOT IN ('12.', '13.', '14.'))
    THEN 'Исходящий трафик'
ELSEIF (LEFT([dst], 3) IN ('12.', '13.', '14.') 
    AND 
    LEFT([src], 3) NOT IN ('12.', '13.', '14.'))
    THEN 'Входящий трафик'
ELSE
    'Неопознаный трафик'
END
```

- Показатель `byt_gb3` для сокращения количества байт до Гбайт

```{}
[bytes] / (1024 * 1024 * 1024)
```

- Показатель `gb3` для вывода данных и пометкой гигабайт (Гб)

```{}
CONCAT([byt_gb3], " Гб")
```

## Оценка результатов

текст

## Вывод

текст