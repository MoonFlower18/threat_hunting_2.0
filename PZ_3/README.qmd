---
title: "Практическое задание №3"
author: "Журавлева Юлия БИСО-01-20"
format:   
  md:
    output-file: README.md
---

# Анализ данных сетевого трафика при помощи библиотеки Arrow

## Цель работы

1. Изучить возможности технологии Apache Arrow для обработки и анализ больших данных
2. Получить навыки применения Arrow совместно с языком программирования R
3. Получить навыки анализа метаинфомации о сетевом трафике
4. Получить навыки применения облачных технологий хранения, подготовки и анализа данных: Yandex Object Storage, Rstudio Server.

## Исходные данные

1. Ноутбук с ОС Windows 10
2. Apache Arrow
3. Yandex Object Storage
4. RStudio Server

## Задание

Используя язык программирования R, библиотеку arrow и облачную `IDE Rstudio Server`, развернутую в `Yandex Cloud`, выполнить задания и составить отчет.

## Ход работы

### 1. Настройка подключения к IDE Rstudio Server через ssh-туннель

- Подключимся к удалённому серверу через ssh-туннель как пользователь user18. 

```{}
PS C:\Users\Юлия> ssh -i "C:\Users\\Downloads\Telegram Desktop\rstudio.key" -L 8787:127.0.0.1:8787 user18@62.84.123.211
```

![](screen/1.png)

- Поменяем пароль с дефолтного на персональный. Скриншот предоставлен с системы Kali Linux, так как первоначальная настройка была именно на нём, но из-за возникших проблем на ВМ, пришлось перейти на основную систему Windows.

![](screen/2.png)

- Перейдём по адресу `http://127.0.0.1:8787` и зайдём под созданным пользователем `user18`.

![](screen/3.png)

- Настроим Git на RStudio Server с помощью SSH ключа. Так как изначально установка была на ОС Kali Linux, то повторной аутентификации на ОС Windows не потребовалось. 

![](screen/4.png)

Однако этого оказалось недостаточно для пуша в репозиторий, поэтому после танцев с бубном, спасение нашлось в индивидуальном токене пользователя на замену аутентификации по паролю.

![](screen/5.png)

### 2. Настройка рабочего пространства

- Первым делом установим необходимые билбиотеки

```{r}
library(arrow)
library(tidyverse)
library(dplyr)
```

- Далее создаем директорию dataset и загружаем в нее dataframe arrow-datasets/tm_data.pqt из Yandex Object Storage.

```{r}
dir.create("dataset")

curl::multi_download("https://storage.yandexcloud.net/arrow-datasets/tm_data.pqt", "dataset/ya_dt.pqt",
  resume = TRUE
)
```

- Посмотрим содержимое нашего датасета, чтобы убедиться, что он работает.

```{r}
full_df <- arrow::open_dataset(sources = "dataset/ya_dt.pqt", format  = "parquet")
full_df %>% glimpse()
```

- Заметим, что с полем `timestamp` что-то не так, а именно указан неверный тип данных. Приведём его в более понятный вид.

```{r}
full_df <- full_df %>% mutate(timestamp = as_datetime(timestamp / 1000, origin = "1970-01-01", tz = "UTC"))
full_df %>% glimpse()
```





## Обработка данных

Задание 1: Найдите утечку данных из Вашей сети
Задание 2: Найдите утечку данных 2
Задание 3: Найдите утечку данных 3

## Вывод

текст